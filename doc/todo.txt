Next: settings
  * Add repos:
      * "Add" entry (click or space)
      * Insert key: select newly inserted item
  * Remaining settings in settings dialog
  * Store/load settings
  * Apply new settings
  * Make GlobalHotkey understand QKeySequence

Configuration:
  * Different sets of configuration for production/development on the same
    machine
  * Mechanism for applying changed configuration
  * Use something other than QSettings (appdirs?) so the CLI/CUI doesn't require
    Qt?
  * ColorDelegate: clear button in delegate, get rid of ColorEditWidget?

GUI:
  * Font in text view is very small
  * Scroll to first match in file
  * Handle or disable Cancel while loading? Load in background?
  * Remove root text (we have multiple repositories now)
  * Show number of files per category (result set), number of matches per file
  * Reload changed files
  * Launch editor (and reload), e. g. VIM:
        Args without search: ["{file_name}"]
        Args with search:    ["+/{search_term}", "{file_name}"]
  * When changing the text, always select
    * the previous file if it is still there
    * the first one if not
  * Speed of QTextEdit OK with large files?
    QTextEdit: setText and setPlainText takes the same time. QPlainTextEdit has
    setPlainText only.
  * Jump to next/previous match
  * Speed up highlighter?
  * Some files can take long to load
    * Progress bar?
    * Use QtWebKit? Qt web engine?
  * Qt Markdown example with QWebChannel und QWebEngineView
    https://doc.qt.io/qt-5.10/qtwebengine-webenginewidgets-markdowneditor-example.html
  * Show repository names
  * Add global hotkey to systray icon tooltip

Engine:
  * Extended matching
      * qaim -> QAbstractItemModel/q_abstract_item_model
      * Ã¤ / ae
      * https://github.com/garybernhardt/selecta
      * https://github.com/forrestthewoods/lib_fts/blob/master/docs/fuzzy_match.md

  * In "[[x]]", is x recognized as a single word?
  * Inexact file name matching
      * Ignore underscores
  * Matching multiple criteria (e. g. Python and integer)
      * Search in selected file?
  * Test: file name with spaces and other fancy characters
  * We might want to exclude certain patterns from the "file contains"
    categories, e. g. [[foo]] if a file foo also exists.
  * Match headings (""== xxx ==" or "## xxx")

CLI:
  * Don't load all? All will be loaded when searching

CUI:
  * Investigate CUI frameworks
  * Tests: Windows, Linux, WSL, Putty, JuiceSSH
